base:
  project: winealcohol-project
  random_state: 50
  target_col: alcohol
data:
  cleansed: data/cleansed
  raw: data/raw
  remote: data/remote
  transformed:
    X: data/transformed/X
    y: data/transformed/y
data_source:
  remote_source: remote/winequality-red.csv
logging:
  format: '%(levelname)s: %(asctime)s: %(message)s'
  level: INFO
  log_file: logs/data.log
mlflow_configuration:
  artifacts_dir: artifacts
  experiment_name: experiment
  production_model: prediction_app/prediction_resources/serving_models
  registered_model_name: GradientBoostingRegressor
  remote_server_uri: http://127.0.0.1:1234
  run_name: Regression
model:
  DecisionTreeRegressor:
    class: models.decision_tree_regression_model.train_decision_tree_regression_model
    name: DecisionTreeRegressor
    params:
      max_depth: 10
      min_samples_leaf: 16
      min_samples_split: 8
  GradientBoostingRegressor:
    class: models.gradient_boosting_regression_model.train_gradient_boosting_regression_model
    name: GradientBoostingRegression
    params:
      learning_rate: 0.09441984528708666
      max_depth: 4
      min_samples_leaf: 10
      min_samples_split: 3
      n_estimators: 185
  Lasso:
    class: models.lasso_regression_model.train_lasso_regression_model
    name: LassoRegression
    params:
      alpha: 1.001098452866198e-05
  Ridge:
    class: models.ridge_regression_model.train_ridge_regression_model
    name: RidgeRegression
    params:
      alpha: 3.306264699556261e-05
  SVR:
    class: models.support_vector_regression_model.train_support_vector_regression_model
    name: SupportVectorRegression
    params:
      C: 0.999599271154472
      kernel: linear
prediction_app:
  model: prediction_app/prediction_resources/serving_models
  root_dir: prediction_app
  scaler: prediction_app/prediction_resources/scaler
reports:
  metrics: report/metrics.json
  metrics_history: report/metrics_history.json
  params: report/params.json
  reports: report
saved_model_dir: model_artifacts/saved_models
scaler_dir: model_artifacts/scaler
schema:
  input: schema/input_schema.json
split_data:
  test_path: data/processed/test_wine_quality.csv
  test_size: 0.3
  train_path: data/processed/train_wine_quality.csv
